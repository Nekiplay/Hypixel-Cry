
// For those who want the bleeding edge
buildscript {
    repositories {
        maven { url 'https://jitpack.io' }
        maven {
            name = 'sponge'
            url = 'https://repo.spongepowered.org/maven'
        }
        maven { url 'https://maven.minecraftforge.net/' }
        mavenCentral()
    }
    dependencies {
        classpath files('forgegradle/ForgeGradle-2.1.2.jar')
        // Apply Mixin AP
        // annotationProcessor 'org.spongepowered:mixin:0.8.5:processor'
        //classpath 'org.spongepowered:mixin:0.8.5:processor'
        classpath 'org.spongepowered:mixingradle:0.6-20171001.194726-1'
    }

}
apply plugin: 'java'
apply plugin: 'net.minecraftforge.gradle.forge'
// MixinGradle:
apply plugin: 'org.spongepowered.mixin'

/*
// for people who want stable - not yet functional for MC 1.8.8 - we require the forgegradle 2.1 snapshot
plugins {
    id "net.minecraftforge.gradle.forge" version "2.0.2"
}
*/

version = "1.9"
group= "com.nekiplay.hypixelcry" // http://maven.apache.org/guides/mini/guide-naming-conventions.html
archivesBaseName = "HypixelAddon"
sourceCompatibility = targetCompatibility = JavaVersion.VERSION_1_8
targetCompatibility = 1.8
compileJava.options.encoding = 'UTF-8'

minecraft {
    version = "1.8.9-11.15.1.2318-1.8.9"
    runDir = "run"
    
    // the mappings can be changed at any time, and must be in the following format.
    // snapshot_YYYYMMDD   snapshot are built nightly.
    // stable_#            stables are built at the discretion of the MCP team.
    // Use non-default mappings at your own risk. they may not allways work.
    // simply re-run your setup task after changing the mappings to update your workspace.
    mappings = "stable_22"
    //makeObfSourceJar = false // an Srg named sources jar is made by default. uncomment this to disable.
    clientRunArgs += ["--tweakClass gg.essential.loader.stage0.EssentialSetupTweaker", "--mixin mixins.hypixelcry.json"]
    makeObfSourceJar = false
}

repositories {
    mavenCentral()
    maven { url "https://jitpack.io" }
    maven { url "https://repo.spongepowered.org/repository/maven-public/" }
    maven { url "https://repo.sk1er.club/repository/maven-public" }
    maven { url "https://repo.sk1er.club/repository/maven-releases/" }
    maven { url 'https://repo.polyfrost.cc/releases' }
}


dependencies {
    //include 'com.github.TheNullicorn:Nedit:2.1.0'
    compileOnly("gg.essential:loader-launchwrapper:1.1.1")
    compileOnly("gg.essential:essential-1.8.9-forge:1498")
    compile 'org.spongepowered:spongeforge:1.8.9-1890-4.2.0-BETA-1625:dev'
    compile("org.spongepowered:mixin:0.7.11-SNAPSHOT")
    annotationProcessor("org.spongepowered:mixin:0.7.11-SNAPSHOT")
    implementation('org.spongepowered:mixin:0.7.11-SNAPSHOT')

    compileOnly('cc.polyfrost:oneconfig-1.8.9-forge:0.2.0-alpha+') // Should not be included in jar
    compile('cc.polyfrost:oneconfig-wrapper-launchwrapper:1.0.0-beta+') // Should be included in jar
    // you may put jars on which you depend on in ./libs
    // or you may define them like so..
    //compile "some.group:artifact:version:classifier"
    //compile "some.group:artifact:version"
      
    // real examples
    //compile 'com.mod-buildcraft:buildcraft:6.0.8:dev'  // adds buildcraft to the dev env
    //compile 'com.googlecode.efficient-java-matrix-library:ejml:0.24' // adds ejml to the dev env

    // the 'provided' configuration is for optional dependencies that exist at compile-time but might not at runtime.
    //provided 'com.mod-buildcraft:buildcraft:6.0.8:dev'

    // the deobf configurations:  'deobfCompile' and 'deobfProvided' are the same as the normal compile and provided,
    // except that these dependencies get remapped to your current MCP mappings
    //deobfCompile 'com.mod-buildcraft:buildcraft:6.0.8:dev'
    //deobfProvided 'com.mod-buildcraft:buildcraft:6.0.8:dev'

    // for more info...
    // http://www.gradle.org/docs/current/userguide/artifact_dependencies_tutorial.html
    // http://www.gradle.org/docs/current/userguide/dependency_management.html

}

mixin {
    defaultObfuscationEnv searge
    add sourceSets.main, "mixins.hypixelcry.refmap.json"
}

sourceSets {
    main {
        refMap = "mixins.hypixelcry.refmap.json"
    }
}

jar {

    duplicatesStrategy = DuplicatesStrategy.EXCLUDE

    manifest.attributes(

            "FMLCorePluginContainsFMLMod": true,
            "FMLCorePlugin": "com.nekiplay.hypixelcry.FMLLoadingPlugin",
            "ForceLoadAsMod": true,
            "MixinConfigs": "mixins.hypixelcry.json",
            "ModSide": "CLIENT",
            "TweakClass": "cc.polyfrost.oneconfig.loader.stage0.LaunchWrapperTweaker",
            //"TweakClass": "org.spongepowered.asm.launch.MixinTweaker",
            "TweakOrder": "0"
    )
}

processResources
{
    // this will ensure that this task is redone when the versions change.
    inputs.property "version", project.version
    inputs.property "mcversion", project.minecraft.version

    // replace stuff in mcmod.info, nothing else
    from(sourceSets.main.resources.srcDirs) {
        include 'mcmod.info'
                
        // replace version and mcversion
        expand 'version':project.version, 'mcversion':project.minecraft.version
    }
        
    // copy everything else, thats not the mcmod.info
    from(sourceSets.main.resources.srcDirs) {
        exclude 'mcmod.info'
    }
}
